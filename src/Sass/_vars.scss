@import url("https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap");

// Breakpoints Structure
$custom-breakpoints: (
	xs:		(minSize: 0px, maxSize: 575px, maxContWidth: 0px, name: 'XS'), // vertical mobile layout
	sm:		(minSize: 576px, maxSize: 767px, maxContWidth: 719px, name: 'SM'), // horizontal mobile layout
	md:		(minSize: 768px, maxSize: 991px, maxContWidth: 720px, name: 'MD'), // ipad
	lg:		(minSize: 992px, maxSize: 1249px, maxContWidth: 960px, name: 'LG'), // ipad pro
	xl:		(minSize: 1250px, maxSize: 1499px, maxContWidth: 1250px, name: 'XL'),
	max: 	(minSize: 1500px, maxSize: 0px, maxContWidth: 1201px, name: 'MAX')
);
@mixin responsive($breakpoint) { 
	@if map-has-key($custom-breakpoints, $breakpoint) {
		@media (max-width: #{map-get(map-get($custom-breakpoints, $breakpoint), maxSize)}) {
			@content;
		}
	}
	@else {
		@warn "Breakpoint #{$breakpoint} does not exist. Check case sensitivity.";
	}
}

// Variables
$MainFont: "Inter", sans-serif;
$DarkText: #252525;
$MaxPageWidth: 1920px;
$LightTextColor: rgba(80, 80, 80, 0.5);
$Blue: #131ef3;
$LightBackground: #e3e6ff;

%FlexCenter{
	display: flex;
	justify-content: center;
	align-items: center;
}

@mixin grid($val) {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax($val, 1fr));
}

// For Spacing Between Component
@mixin SPACE($space, $space-lg, $space-md) {
	padding-top: #{$space}px;
	@include responsive(lg) {
		padding-top: #{$space-lg}px;
	}
	@include responsive(md) {
		padding-top: #{$space-md}px;
	}
}

.MF {
	font-family: $MainFont;
}